var View = require('../view');
var ModelView = require('../view-model-view');
var ViewCollection = require('../../collection/view-collection');
var ViewCollectionView = View.extend({
  tagName: 'ul',
  className: 'collection-view loading',
  attributes: {
    'role': 'listbox'
  },
  ModelViewClass: ModelView,
  initialize: function (options) {
    this._checkable = !!options.checkable;
    this._collection = options.collection;
    options.views = this._createViewCollection();
    this.listenTo(this._collection, 'add', this._addView);
    this.listenTo(this._collection, 'change', this.render);
    this.listenTo(this._collection, 'reset', this.render);
    this.listenTo(this._collection, 'sort', this.render);
    View.prototype.initialize.call(this, options);
  },
  render: function () {
    if (this._views.length) {
      this.el.classList.remove('loading');
    }

    return View.prototype.render.call(this);
  },
  _addView: function (name, model) {
    this._views.push(this._createView(name, model));
    this.render();
  },
  _createViewCollection: function () {
    var self = this;

    return self._collection.map(function (model) {
      return self._createView(model.get('name'), model);
    });
  },
  _createView: function (name, model) {
    return {
      name: name,
      view: new this.ModelClassView({
        model: model,
        parent: this,
        checkable: this._checkable
      })
    };
  }
});

module.exports = ViewCollectionView;
